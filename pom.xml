<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>net.kraklups.photonwell</groupId>
	<artifactId>photonwell-app</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>${project.artifactId} Project</name>
	<url>http://maven.apache.org</url>
	<description>photonwell-app</description>

	<properties>
        <!-- Encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Package versions (except those defined in "profiles" section) -->
        <slf4j.version>1.7.10</slf4j.version>
        <javassist.version>3.19.0-GA</javassist.version>
        <cglib.version>3.1</cglib.version>
        <hibernate.version>4.3.8.Final</hibernate.version>
        <hibernate-spatial.version>4.3</hibernate-spatial.version>
        <hibernate-validator.version>5.1.3.Final</hibernate-validator.version>
        <junit.version>4.12</junit.version>
        <spring.version>4.1.5.RELEASE</spring.version>
        <spring-boot-parent.version>1.2.2.RELEASE</spring-boot-parent.version>
        <servletApi.version>3.0.1</servletApi.version>
        <tiles-version>3.0.5</tiles-version>
        <jstl.version>1.2</jstl.version>
        <validation-api.version>1.1.0.Final</validation-api.version>
        <spring-security.version>3.2.6.RELEASE</spring-security.version>
        <spring-data-commons.version>1.9.2.RELEASE</spring-data-commons.version>
		<spring-data-mongodb.version>1.6.2.RELEASE</spring-data-mongodb.version>
		<mongo-java-driver.version>2.13.0</mongo-java-driver.version>

        <!-- Plugin versions -->
        <mavenCompilerPlugin.version>3.2</mavenCompilerPlugin.version>
        <mavenResourcesPlugin.version>2.7</mavenResourcesPlugin.version>
        <sqlMavenPlugin.version>1.5</sqlMavenPlugin.version>
        <mavenAssemblyPlugin.version>2.5.3</mavenAssemblyPlugin.version>
        <jettyMavenPlugin>9.3.0.M1</jettyMavenPlugin>
        <mavenEclipsePlugin.version>2.9</mavenEclipsePlugin.version>
		<java.version>1.7</java.version>
	</properties>

    <!-- ========================================================== -->    
    <!-- Dependency management -->      
	<dependencyManagement>
    	<dependencies>
			<!-- SLF4J (required by Hibernate) -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>${slf4j.version}</version>
				<scope>runtime</scope>
			</dependency>   
			 	
			<!-- JUnit -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			
        <dependency>
            <!-- Import dependency management from Spring Boot -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-dependencies</artifactId>
            <version>${spring-boot-parent.version}</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>			
			
    	    <dependency>
        	    <groupId>org.springframework</groupId>
            	<artifactId>spring-framework-bom</artifactId>
            	<version>${spring.version}</version>
            	<type>pom</type>
            	<scope>import</scope>
        	</dependency>
    	</dependencies>
	</dependencyManagement> 
    <!-- ========================================================== -->	    	
	<dependencies>
		<!-- SLF4J (required by Hibernate) -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<scope>runtime</scope>
		</dependency>	
		
		<!-- JUnit -->
    	<dependency>
      	<groupId>junit</groupId>
      	<artifactId>junit</artifactId>
      	<scope>test</scope>
    	</dependency>
    	
        <!-- Spring -->           
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>    	
		
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-commons</artifactId>		
		</dependency>
		
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-rest</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>

		<!-- MongoDB Driver -->
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
		</dependency>

        <!-- Validation API -->
        <dependency>
    		<groupId>javax.validation</groupId>
    		<artifactId>validation-api</artifactId>
    		<version>${validation-api.version}</version>
		</dependency>
		
		<!-- Hibernate Validation -->
		<dependency>
    		<groupId>org.hibernate</groupId>
    		<artifactId>hibernate-validator</artifactId>
	    </dependency>
		
	</dependencies>

	<build>
        <!-- =============================================================== -->	
    	<finalName>${project.artifactId}</finalName>
        
        <resources>
            <!--
                Apply filtering to files matching the following
                expressions in src/main/resources.
            -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>spring-config.xml</include>                  
                </includes>
            </resource>

            <!--
                Continue considering resources the files in
                src/main/resources, but without applying filtering.
            -->
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>        
        
        <plugins>        
			<plugin>
    			<groupId>org.apache.maven.plugins</groupId>
    			<artifactId>maven-eclipse-plugin</artifactId>
    			<version>${mavenEclipsePlugin.version}</version>  
    			<configuration>
        			<additionalBuildcommands>
            			<buildCommand>org.springframework.ide.eclipse.core.springbuilder</buildCommand>
        			</additionalBuildcommands>
        			<additionalProjectnatures>
	            		<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
        			</additionalProjectnatures>
        			<downloadSources>true</downloadSources>
        			<downloadJavadocs>true</downloadJavadocs>
    			</configuration>
			</plugin>   
			     
            <!-- ========================================================== -->
            <!-- Compiler configuration -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${mavenCompilerPlugin.version}</version>
                <configuration>
                    <verbose>true</verbose>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                </configuration>
            </plugin>
            
			<!-- ========================================================== -->
            <!-- Resources plugin (2.4.x versions do not correctly filter
                 files containing '@' character). -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${mavenResourcesPlugin.version}</version>
            </plugin>
                    
			<!-- ========================================================== -->
        	<!-- Spring Boot Maven Support -->
	        <plugin>
    	        <groupId>org.springframework.boot</groupId>
        	    <artifactId>spring-boot-maven-plugin</artifactId>
        	    <version>${spring-boot-parent.version}</version>
        	</plugin>
            
		</plugins>            
        
	</build>

</project>
